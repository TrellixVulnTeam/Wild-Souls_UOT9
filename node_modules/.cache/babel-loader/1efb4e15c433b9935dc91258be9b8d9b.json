{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"row\",\n  style: {\n    \"background-color\": \"#be5a4b\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-md-3\"\n}, \"asdf\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-md-3\"\n}, \"asdf\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-md-3\"\n}, \"asdf\")], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, _toDisplayString($props.id) + \" \" + _toDisplayString($data.product.product_name), 1\n  /* TEXT */\n  ), _hoisted_1], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"sources":["C:\\Users\\Jeloska Chavez\\proyecto final\\FRONTEND-NODE-VUE-es-boilerplate-vue\\src\\pages\\Product.vue"],"names":[],"mappings":";;gCAMI,mBAAA,CAKQ,KALR,EAKQ;AALH,EAAA,KAAK,EAAC,KAKH;AALS,EAAA,KAAiC,EAAjC;AAAA,wBAAA;AAAA;AAKT,CALR,E,cAEI,mBAAA,CAAgC,KAAhC,EAAgC;AAA3B,EAAA,KAAK,EAAC;AAAqB,CAAhC,EAAsB,MAAtB,C,eACA,mBAAA,CAAgC,KAAhC,EAAgC;AAA3B,EAAA,KAAK,EAAC;AAAqB,CAAhC,EAAsB,MAAtB,C,eACA,mBAAA,CAAgC,KAAhC,EAAgC;AAA3B,EAAA,KAAK,EAAC;AAAqB,CAAhC,EAAsB,MAAtB,C,CAJJ,E;;AAAA,C;;;6DALF,mBAAA,CAGM,KAHN,EAGM,IAHN,EAGM,gBAAA,CAFD,MAAA,CAAA,EAEC,CAAA,GAFI,GAEJ,GADJ,gBAAA,CAAG,KAAA,CAAA,OAAA,CAAQ,YAAX,CAFF,EAEyB;AAAA;AAFzB,G,EAKE,U","sourcesContent":["<template>\n  <div>\n    {{ id }}\n    {{ product.product_name }}\n  </div>\n  \n    <div class=\"row\" style=\"background-color: #be5a4b\">\n    \n        <div class=\"col-md-3\">asdf</div>\n        <div class=\"col-md-3\">asdf</div>\n        <div class=\"col-md-3\">asdf</div>\n      </div>\n       \n</template>\n<script>\n\nimport { api } from '@/config/site.config';\nexport default {\n  name: 'ProductPage',\n  props: ['id'],\n  data() {\n    return {\n      product: {},\n    };\n  },\n  methods: {},\n  computed: {},\n  watch: {},\n  created() {},\n  mounted() {\n    //console.log(this.id);\n    api.get('products/getProduct/'+ this.id).then((response) => (this.product = response.data.product));    \n    \n  },\n  // Se pueden utilizar estos hooks para el ciclo de vida\n  // beforeCreate, created, beforeMount, mounted, beforeUpdate, updated\n  // activated, deactivated, beforeUnmount, unmounted\n};\n</script>\n\n<style scoped></style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}